// Generated from gram.txt by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u0015\u0088\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0003\u0002\u0003\u0002\u0003\u0003\u0006\u0003",
    "-\n\u0003\r\u0003\u000e\u0003.\u0003\u0003\u0003\u0003\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0007\u00047\n\u0004\f\u0004\u000e\u0004",
    ":\u000b\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0007",
    "\u0004@\n\u0004\f\u0004\u000e\u0004C\u000b\u0004\u0003\u0004\u0003\u0004",
    "\u0005\u0004G\n\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
    "\u0006\u000ek\n\u000e\r\u000e\u000e\u000el\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
    "\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0005",
    "\u0012\u0083\n\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014",
    "\u0003A\u0002\u0015\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015\u0003\u0002",
    "\f\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003\u0002\f\f\u0003\u0002*",
    "*\u0003\u0002++\u0003\u0002}}\u0003\u0002\u007f\u007f\u0003\u00022;",
    "\u0004\u0002>>@@\u0003\u0002--\u0005\u0002\'\',,11\u0002\u0090\u0002",
    "\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002",
    "\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002",
    "\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002",
    "\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002",
    "\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002",
    "\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002",
    "\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002",
    "\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002",
    "#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003",
    "\u0002\u0002\u0002\u0003)\u0003\u0002\u0002\u0002\u0005,\u0003\u0002",
    "\u0002\u0002\u0007F\u0003\u0002\u0002\u0002\tJ\u0003\u0002\u0002\u0002",
    "\u000bP\u0003\u0002\u0002\u0002\rR\u0003\u0002\u0002\u0002\u000fT\u0003",
    "\u0002\u0002\u0002\u0011W\u0003\u0002\u0002\u0002\u0013\\\u0003\u0002",
    "\u0002\u0002\u0015c\u0003\u0002\u0002\u0002\u0017e\u0003\u0002\u0002",
    "\u0002\u0019g\u0003\u0002\u0002\u0002\u001bj\u0003\u0002\u0002\u0002",
    "\u001dn\u0003\u0002\u0002\u0002\u001fq\u0003\u0002\u0002\u0002!u\u0003",
    "\u0002\u0002\u0002#\u0082\u0003\u0002\u0002\u0002%\u0084\u0003\u0002",
    "\u0002\u0002\'\u0086\u0003\u0002\u0002\u0002)*\u0007=\u0002\u0002*\u0004",
    "\u0003\u0002\u0002\u0002+-\t\u0002\u0002\u0002,+\u0003\u0002\u0002\u0002",
    "-.\u0003\u0002\u0002\u0002.,\u0003\u0002\u0002\u0002./\u0003\u0002\u0002",
    "\u0002/0\u0003\u0002\u0002\u000201\b\u0003\u0002\u00021\u0006\u0003",
    "\u0002\u0002\u000223\u00071\u0002\u000234\u00071\u0002\u000248\u0003",
    "\u0002\u0002\u000257\n\u0003\u0002\u000265\u0003\u0002\u0002\u00027",
    ":\u0003\u0002\u0002\u000286\u0003\u0002\u0002\u000289\u0003\u0002\u0002",
    "\u00029G\u0003\u0002\u0002\u0002:8\u0003\u0002\u0002\u0002;<\u00071",
    "\u0002\u0002<=\u0007,\u0002\u0002=A\u0003\u0002\u0002\u0002>@\u000b",
    "\u0002\u0002\u0002?>\u0003\u0002\u0002\u0002@C\u0003\u0002\u0002\u0002",
    "AB\u0003\u0002\u0002\u0002A?\u0003\u0002\u0002\u0002BD\u0003\u0002\u0002",
    "\u0002CA\u0003\u0002\u0002\u0002DE\u0007,\u0002\u0002EG\u00071\u0002",
    "\u0002F2\u0003\u0002\u0002\u0002F;\u0003\u0002\u0002\u0002GH\u0003\u0002",
    "\u0002\u0002HI\b\u0004\u0002\u0002I\b\u0003\u0002\u0002\u0002JK\u0007",
    "y\u0002\u0002KL\u0007j\u0002\u0002LM\u0007k\u0002\u0002MN\u0007n\u0002",
    "\u0002NO\u0007g\u0002\u0002O\n\u0003\u0002\u0002\u0002PQ\t\u0004\u0002",
    "\u0002Q\f\u0003\u0002\u0002\u0002RS\t\u0005\u0002\u0002S\u000e\u0003",
    "\u0002\u0002\u0002TU\u0007k\u0002\u0002UV\u0007h\u0002\u0002V\u0010",
    "\u0003\u0002\u0002\u0002WX\u0007g\u0002\u0002XY\u0007n\u0002\u0002Y",
    "Z\u0007u\u0002\u0002Z[\u0007g\u0002\u0002[\u0012\u0003\u0002\u0002\u0002",
    "\\]\u0007t\u0002\u0002]^\u0007g\u0002\u0002^_\u0007v\u0002\u0002_`\u0007",
    "w\u0002\u0002`a\u0007t\u0002\u0002ab\u0007p\u0002\u0002b\u0014\u0003",
    "\u0002\u0002\u0002cd\t\u0006\u0002\u0002d\u0016\u0003\u0002\u0002\u0002",
    "ef\t\u0007\u0002\u0002f\u0018\u0003\u0002\u0002\u0002gh\u0007/\u0002",
    "\u0002h\u001a\u0003\u0002\u0002\u0002ik\t\b\u0002\u0002ji\u0003\u0002",
    "\u0002\u0002kl\u0003\u0002\u0002\u0002lj\u0003\u0002\u0002\u0002lm\u0003",
    "\u0002\u0002\u0002m\u001c\u0003\u0002\u0002\u0002no\u0007q\u0002\u0002",
    "op\u0007t\u0002\u0002p\u001e\u0003\u0002\u0002\u0002qr\u0007c\u0002",
    "\u0002rs\u0007p\u0002\u0002st\u0007f\u0002\u0002t \u0003\u0002\u0002",
    "\u0002uv\u0007p\u0002\u0002vw\u0007q\u0002\u0002wx\u0007v\u0002\u0002",
    "x\"\u0003\u0002\u0002\u0002yz\u0007@\u0002\u0002z\u0083\u0007?\u0002",
    "\u0002{|\u0007>\u0002\u0002|\u0083\u0007?\u0002\u0002}\u0083\t\t\u0002",
    "\u0002~\u007f\u0007#\u0002\u0002\u007f\u0083\u0007?\u0002\u0002\u0080",
    "\u0081\u0007?\u0002\u0002\u0081\u0083\u0007?\u0002\u0002\u0082y\u0003",
    "\u0002\u0002\u0002\u0082{\u0003\u0002\u0002\u0002\u0082}\u0003\u0002",
    "\u0002\u0002\u0082~\u0003\u0002\u0002\u0002\u0082\u0080\u0003\u0002",
    "\u0002\u0002\u0083$\u0003\u0002\u0002\u0002\u0084\u0085\t\n\u0002\u0002",
    "\u0085&\u0003\u0002\u0002\u0002\u0086\u0087\t\u000b\u0002\u0002\u0087",
    "(\u0003\u0002\u0002\u0002\t\u0002.8AFl\u0082\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function gramLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

gramLexer.prototype = Object.create(antlr4.Lexer.prototype);
gramLexer.prototype.constructor = gramLexer;

Object.defineProperty(gramLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

gramLexer.EOF = antlr4.Token.EOF;
gramLexer.SEMI = 1;
gramLexer.WHITESPACE = 2;
gramLexer.COMMENT = 3;
gramLexer.WHILE = 4;
gramLexer.LP = 5;
gramLexer.RP = 6;
gramLexer.IF = 7;
gramLexer.ELSE = 8;
gramLexer.RETURN = 9;
gramLexer.LBR = 10;
gramLexer.RBR = 11;
gramLexer.MINUS = 12;
gramLexer.NUM = 13;
gramLexer.OR = 14;
gramLexer.AND = 15;
gramLexer.NOT = 16;
gramLexer.RELOP = 17;
gramLexer.PLUS = 18;
gramLexer.MULOP = 19;

gramLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

gramLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

gramLexer.prototype.literalNames = [ null, "';'", null, null, "'while'", 
                                     null, null, "'if'", "'else'", "'return'", 
                                     null, null, "'-'", null, "'or'", "'and'", 
                                     "'not'" ];

gramLexer.prototype.symbolicNames = [ null, "SEMI", "WHITESPACE", "COMMENT", 
                                      "WHILE", "LP", "RP", "IF", "ELSE", 
                                      "RETURN", "LBR", "RBR", "MINUS", "NUM", 
                                      "OR", "AND", "NOT", "RELOP", "PLUS", 
                                      "MULOP" ];

gramLexer.prototype.ruleNames = [ "SEMI", "WHITESPACE", "COMMENT", "WHILE", 
                                  "LP", "RP", "IF", "ELSE", "RETURN", "LBR", 
                                  "RBR", "MINUS", "NUM", "OR", "AND", "NOT", 
                                  "RELOP", "PLUS", "MULOP" ];

gramLexer.prototype.grammarFileName = "gram.txt";


exports.gramLexer = gramLexer;

