// Generated from gram.txt by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u0019\u00b5\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0003\u0002\u0003\u0002\u0003\u0003\u0006",
    "\u00035\n\u0003\r\u0003\u000e\u00036\u0003\u0003\u0003\u0003\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0007\u0004?\n\u0004\f\u0004\u000e",
    "\u0004B\u000b\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004",
    "\u0007\u0004H\n\u0004\f\u0004\u000e\u0004K\u000b\u0004\u0003\u0004\u0003",
    "\u0004\u0005\u0004O\n\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003",
    "\u000e\u0006\u000es\n\u000e\r\u000e\u000e\u000et\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0005\u0012\u008b\n\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0005",
    "\u0016\u00a2\n\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0007\u0017\u00a8\n\u0017\f\u0017\u000e\u0017\u00ab\u000b\u0017\u0003",
    "\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0007\u0018\u00b1\n\u0018",
    "\f\u0018\u000e\u0018\u00b4\u000b\u0018\u0003I\u0002\u0019\u0003\u0003",
    "\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013",
    "\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011",
    "!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u0019\u0003\u0002",
    "\u0010\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003\u0002\f\f\u0003\u0002",
    "**\u0003\u0002++\u0003\u0002}}\u0003\u0002\u007f\u007f\u0003\u00022",
    ";\u0004\u0002>>@@\u0003\u0002--\u0005\u0002\'\',,11\u0003\u0002??\u0003",
    "\u0002$$\u0005\u0002C\\aac|\u0006\u00022;C\\aac|\u0002\u00c2\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013",
    "\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017",
    "\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b",
    "\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f",
    "\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003",
    "\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002",
    "\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002",
    "\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002",
    "\u00031\u0003\u0002\u0002\u0002\u00054\u0003\u0002\u0002\u0002\u0007",
    "N\u0003\u0002\u0002\u0002\tR\u0003\u0002\u0002\u0002\u000bX\u0003\u0002",
    "\u0002\u0002\rZ\u0003\u0002\u0002\u0002\u000f\\\u0003\u0002\u0002\u0002",
    "\u0011_\u0003\u0002\u0002\u0002\u0013d\u0003\u0002\u0002\u0002\u0015",
    "k\u0003\u0002\u0002\u0002\u0017m\u0003\u0002\u0002\u0002\u0019o\u0003",
    "\u0002\u0002\u0002\u001br\u0003\u0002\u0002\u0002\u001dv\u0003\u0002",
    "\u0002\u0002\u001fy\u0003\u0002\u0002\u0002!}\u0003\u0002\u0002\u0002",
    "#\u008a\u0003\u0002\u0002\u0002%\u008c\u0003\u0002\u0002\u0002\'\u008e",
    "\u0003\u0002\u0002\u0002)\u0090\u0003\u0002\u0002\u0002+\u00a1\u0003",
    "\u0002\u0002\u0002-\u00a3\u0003\u0002\u0002\u0002/\u00ae\u0003\u0002",
    "\u0002\u000212\u0007=\u0002\u00022\u0004\u0003\u0002\u0002\u000235\t",
    "\u0002\u0002\u000243\u0003\u0002\u0002\u000256\u0003\u0002\u0002\u0002",
    "64\u0003\u0002\u0002\u000267\u0003\u0002\u0002\u000278\u0003\u0002\u0002",
    "\u000289\b\u0003\u0002\u00029\u0006\u0003\u0002\u0002\u0002:;\u0007",
    "1\u0002\u0002;<\u00071\u0002\u0002<@\u0003\u0002\u0002\u0002=?\n\u0003",
    "\u0002\u0002>=\u0003\u0002\u0002\u0002?B\u0003\u0002\u0002\u0002@>\u0003",
    "\u0002\u0002\u0002@A\u0003\u0002\u0002\u0002AO\u0003\u0002\u0002\u0002",
    "B@\u0003\u0002\u0002\u0002CD\u00071\u0002\u0002DE\u0007,\u0002\u0002",
    "EI\u0003\u0002\u0002\u0002FH\u000b\u0002\u0002\u0002GF\u0003\u0002\u0002",
    "\u0002HK\u0003\u0002\u0002\u0002IJ\u0003\u0002\u0002\u0002IG\u0003\u0002",
    "\u0002\u0002JL\u0003\u0002\u0002\u0002KI\u0003\u0002\u0002\u0002LM\u0007",
    ",\u0002\u0002MO\u00071\u0002\u0002N:\u0003\u0002\u0002\u0002NC\u0003",
    "\u0002\u0002\u0002OP\u0003\u0002\u0002\u0002PQ\b\u0004\u0002\u0002Q",
    "\b\u0003\u0002\u0002\u0002RS\u0007y\u0002\u0002ST\u0007j\u0002\u0002",
    "TU\u0007k\u0002\u0002UV\u0007n\u0002\u0002VW\u0007g\u0002\u0002W\n\u0003",
    "\u0002\u0002\u0002XY\t\u0004\u0002\u0002Y\f\u0003\u0002\u0002\u0002",
    "Z[\t\u0005\u0002\u0002[\u000e\u0003\u0002\u0002\u0002\\]\u0007k\u0002",
    "\u0002]^\u0007h\u0002\u0002^\u0010\u0003\u0002\u0002\u0002_`\u0007g",
    "\u0002\u0002`a\u0007n\u0002\u0002ab\u0007u\u0002\u0002bc\u0007g\u0002",
    "\u0002c\u0012\u0003\u0002\u0002\u0002de\u0007t\u0002\u0002ef\u0007g",
    "\u0002\u0002fg\u0007v\u0002\u0002gh\u0007w\u0002\u0002hi\u0007t\u0002",
    "\u0002ij\u0007p\u0002\u0002j\u0014\u0003\u0002\u0002\u0002kl\t\u0006",
    "\u0002\u0002l\u0016\u0003\u0002\u0002\u0002mn\t\u0007\u0002\u0002n\u0018",
    "\u0003\u0002\u0002\u0002op\u0007/\u0002\u0002p\u001a\u0003\u0002\u0002",
    "\u0002qs\t\b\u0002\u0002rq\u0003\u0002\u0002\u0002st\u0003\u0002\u0002",
    "\u0002tr\u0003\u0002\u0002\u0002tu\u0003\u0002\u0002\u0002u\u001c\u0003",
    "\u0002\u0002\u0002vw\u0007q\u0002\u0002wx\u0007t\u0002\u0002x\u001e",
    "\u0003\u0002\u0002\u0002yz\u0007c\u0002\u0002z{\u0007p\u0002\u0002{",
    "|\u0007f\u0002\u0002| \u0003\u0002\u0002\u0002}~\u0007p\u0002\u0002",
    "~\u007f\u0007q\u0002\u0002\u007f\u0080\u0007v\u0002\u0002\u0080\"\u0003",
    "\u0002\u0002\u0002\u0081\u0082\u0007@\u0002\u0002\u0082\u008b\u0007",
    "?\u0002\u0002\u0083\u0084\u0007>\u0002\u0002\u0084\u008b\u0007?\u0002",
    "\u0002\u0085\u008b\t\t\u0002\u0002\u0086\u0087\u0007#\u0002\u0002\u0087",
    "\u008b\u0007?\u0002\u0002\u0088\u0089\u0007?\u0002\u0002\u0089\u008b",
    "\u0007?\u0002\u0002\u008a\u0081\u0003\u0002\u0002\u0002\u008a\u0083",
    "\u0003\u0002\u0002\u0002\u008a\u0085\u0003\u0002\u0002\u0002\u008a\u0086",
    "\u0003\u0002\u0002\u0002\u008a\u0088\u0003\u0002\u0002\u0002\u008b$",
    "\u0003\u0002\u0002\u0002\u008c\u008d\t\n\u0002\u0002\u008d&\u0003\u0002",
    "\u0002\u0002\u008e\u008f\t\u000b\u0002\u0002\u008f(\u0003\u0002\u0002",
    "\u0002\u0090\u0091\t\f\u0002\u0002\u0091*\u0003\u0002\u0002\u0002\u0092",
    "\u0093\u0007k\u0002\u0002\u0093\u0094\u0007p\u0002\u0002\u0094\u00a2",
    "\u0007v\u0002\u0002\u0095\u0096\u0007u\u0002\u0002\u0096\u0097\u0007",
    "v\u0002\u0002\u0097\u0098\u0007t\u0002\u0002\u0098\u0099\u0007k\u0002",
    "\u0002\u0099\u009a\u0007p\u0002\u0002\u009a\u00a2\u0007i\u0002\u0002",
    "\u009b\u009c\u0007f\u0002\u0002\u009c\u009d\u0007q\u0002\u0002\u009d",
    "\u009e\u0007w\u0002\u0002\u009e\u009f\u0007d\u0002\u0002\u009f\u00a0",
    "\u0007n\u0002\u0002\u00a0\u00a2\u0007g\u0002\u0002\u00a1\u0092\u0003",
    "\u0002\u0002\u0002\u00a1\u0095\u0003\u0002\u0002\u0002\u00a1\u009b\u0003",
    "\u0002\u0002\u0002\u00a2,\u0003\u0002\u0002\u0002\u00a3\u00a9\u0007",
    "$\u0002\u0002\u00a4\u00a5\u0007^\u0002\u0002\u00a5\u00a8\u0007$\u0002",
    "\u0002\u00a6\u00a8\n\r\u0002\u0002\u00a7\u00a4\u0003\u0002\u0002\u0002",
    "\u00a7\u00a6\u0003\u0002\u0002\u0002\u00a8\u00ab\u0003\u0002\u0002\u0002",
    "\u00a9\u00a7\u0003\u0002\u0002\u0002\u00a9\u00aa\u0003\u0002\u0002\u0002",
    "\u00aa\u00ac\u0003\u0002\u0002\u0002\u00ab\u00a9\u0003\u0002\u0002\u0002",
    "\u00ac\u00ad\u0007$\u0002\u0002\u00ad.\u0003\u0002\u0002\u0002\u00ae",
    "\u00b2\t\u000e\u0002\u0002\u00af\u00b1\t\u000f\u0002\u0002\u00b0\u00af",
    "\u0003\u0002\u0002\u0002\u00b1\u00b4\u0003\u0002\u0002\u0002\u00b2\u00b0",
    "\u0003\u0002\u0002\u0002\u00b2\u00b3\u0003\u0002\u0002\u0002\u00b30",
    "\u0003\u0002\u0002\u0002\u00b4\u00b2\u0003\u0002\u0002\u0002\r\u0002",
    "6@INt\u008a\u00a1\u00a7\u00a9\u00b2\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function gramLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

gramLexer.prototype = Object.create(antlr4.Lexer.prototype);
gramLexer.prototype.constructor = gramLexer;

Object.defineProperty(gramLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

gramLexer.EOF = antlr4.Token.EOF;
gramLexer.SEMI = 1;
gramLexer.WHITESPACE = 2;
gramLexer.COMMENT = 3;
gramLexer.WHILE = 4;
gramLexer.LP = 5;
gramLexer.RP = 6;
gramLexer.IF = 7;
gramLexer.ELSE = 8;
gramLexer.RETURN = 9;
gramLexer.LBR = 10;
gramLexer.RBR = 11;
gramLexer.MINUS = 12;
gramLexer.NUM = 13;
gramLexer.OR = 14;
gramLexer.AND = 15;
gramLexer.NOT = 16;
gramLexer.RELOP = 17;
gramLexer.PLUS = 18;
gramLexer.MULOP = 19;
gramLexer.EQ = 20;
gramLexer.TYPE = 21;
gramLexer.STRING_CONSTANT = 22;
gramLexer.ID = 23;

gramLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

gramLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

gramLexer.prototype.literalNames = [ null, "';'", null, null, "'while'", 
                                     null, null, "'if'", "'else'", "'return'", 
                                     null, null, "'-'", null, "'or'", "'and'", 
                                     "'not'" ];

gramLexer.prototype.symbolicNames = [ null, "SEMI", "WHITESPACE", "COMMENT", 
                                      "WHILE", "LP", "RP", "IF", "ELSE", 
                                      "RETURN", "LBR", "RBR", "MINUS", "NUM", 
                                      "OR", "AND", "NOT", "RELOP", "PLUS", 
                                      "MULOP", "EQ", "TYPE", "STRING_CONSTANT", 
                                      "ID" ];

gramLexer.prototype.ruleNames = [ "SEMI", "WHITESPACE", "COMMENT", "WHILE", 
                                  "LP", "RP", "IF", "ELSE", "RETURN", "LBR", 
                                  "RBR", "MINUS", "NUM", "OR", "AND", "NOT", 
                                  "RELOP", "PLUS", "MULOP", "EQ", "TYPE", 
                                  "STRING_CONSTANT", "ID" ];

gramLexer.prototype.grammarFileName = "gram.txt";


exports.gramLexer = gramLexer;

